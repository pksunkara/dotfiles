unbind-key -a
unbind-key -T copy-mode -a
unbind-key -T copy-mode-vi -a

set -g default-terminal "xterm-256color"
setw -g mode-keys vi
setw -g mouse on
setw -q -g utf8 on

set -g base-index 1
setw -g pane-base-index 1

set -g set-titles on
setw -g automatic-rename on

set -g history-limit 5000
set -sg repeat-time 600

set-option -g prefix C-w
bind-key C-w send-prefix

bind v split-window -h
bind s split-window -v

bind -r Up select-pane -U
bind -r Down select-pane -D
bind -r Left select-pane -L
bind -r Right select-pane -R

bind -r j resize-pane -D
bind -r k resize-pane -U
bind -r h resize-pane -L
bind -r l resize-pane -R

bind q display-panes
bind ? list-keys

bind 0 select-window -t :=0
bind 1 select-window -t :=1
bind 2 select-window -t :=2
bind 3 select-window -t :=3
bind 4 select-window -t :=4
bind 5 select-window -t :=5
bind 6 select-window -t :=6
bind 7 select-window -t :=7
bind 8 select-window -t :=8
bind 9 select-window -t :=9

bind -n S-Left previous-window
bind -n S-Right next-window

bind t choose-tree -Z
bind w choose-tree -Zw
bind n choose-tree -Zs
bind -n C-f command-prompt "find-window -Z '%%'"
bind -n C-s command-prompt -p find-session "switch-client -t %%"

bind C-w select-pane -t :.+

bind -n C-t new-window
bind -n C-n new-session
bind -n C-z suspend-client

bind : command-prompt

bind c confirm-before -p "kill-window #W? (y/n)" kill-window
bind x command-prompt "kill-session -t '%%'"
# bind x confirm-before -p "kill-session #S? (y/n)" run-shell "tmux curr_session='#S' \; switch-client -n \; kill-session -t $curr_session"

bind . command-prompt "rename-session '%%'"
bind , command-prompt "rename-window '%%'"

bind / command-prompt "move-window -t %%"

bind -r \[ switch-client -p
bind -r \] switch-client -n

bind -n M-v run-shell "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"

bind > swap-pane -D
bind < swap-pane -U

bind o setw synchronize-panes \; display 'Toggled pane syncrhonization'

bind b list-buffers
bind p paste-buffer
bind c choose-buffer

bind i copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi \$ send -X end-of-line
bind -T copy-mode-vi ^ send -X back-to-indentation
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi q send-keys -X cancel
bind -T copy-mode-vi G send-keys -X history-bottom
bind -T copy-mode-vi g send-keys -X history-top
bind -T copy-mode-vi h send-keys -X cursor-left
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi k send-keys -X cursor-up
bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi n send-keys -X search-again
bind -T copy-mode-vi BSpace send-keys -X cursor-left
bind -T copy-mode-vi NPage send-keys -X page-down
bind -T copy-mode-vi PPage send-keys -X page-up
bind -T copy-mode-vi Up send-keys -X cursor-up
bind -T copy-mode-vi Down send-keys -X cursor-down
bind -T copy-mode-vi Left send-keys -X cursor-left
bind -T copy-mode-vi Right send-keys -X cursor-right
bind -T copy-mode-vi % send-keys -X next-matching-bracket
bind -T copy-mode-vi / command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind -T copy-mode-vi : command-prompt -p "(goto line)" "send -X goto-line \"%%%\""
bind -T copy-mode-vi A send-keys -X append-selection-and-cancel
bind -T copy-mode-vi B send-keys -X previous-space
bind -T copy-mode-vi D send-keys -X copy-end-of-line
bind -T copy-mode-vi E send-keys -X next-space-end
bind -T copy-mode-vi H send-keys -X top-line
bind -T copy-mode-vi J send-keys -X scroll-down
bind -T copy-mode-vi K send-keys -X scroll-up
bind -T copy-mode-vi L send-keys -X bottom-line
bind -T copy-mode-vi M send-keys -X middle-line
bind -T copy-mode-vi N send-keys -X search-reverse
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi W send-keys -X next-space
bind -T copy-mode-vi b send-keys -X previous-word
bind -T copy-mode-vi e send-keys -X next-word-end
bind -T copy-mode-vi w send-keys -X next-word
bind -T copy-mode-vi \{ send-keys -X previous-paragraph
bind -T copy-mode-vi \} send-keys -X next-paragraph
bind -T copy-mode-vi MouseDown1Pane select-pane
bind -T copy-mode-vi MouseDrag1Pane select-pane \; send-keys -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 1 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 1 scroll-down
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word
bind -T copy-mode-vi TripleClick1Pane select-pane \; send-keys -X select-line

bind -n MouseDown1Pane select-pane -t = \; send-keys -M
bind -n MouseDown1Status select-window -t =
bind -n MouseDrag1Border resize-pane -M
bind -n MouseDrag1Pane if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""

bind r source-file ~/.tmux.conf \; display 'Reloaded configuration'

set -g set-titles-string "#h ❐ #S - #I #W"

set -g status-left-length 1000
set -g status-right-length 1000

setw -g pane-border-style "fg=#444444,bg=default"
setw -g pane-active-border-style "fg=#00afff,bg=default"

setw -g mode-style "fg=default,bg=#333333"
set -g message-style "fg=#000000,bg=#ffff00,bold"

set -g status-style "fg=#8a8a8a,bg=#080808"
set -g status-left-style "fg=#8a8a8a,bg=#080808"
set -g status-right-style "fg=#8a8a8a,bg=#080808"

setw -g window-status-format "#[fg=#080808,bg=#080808]\uE0B0#[fg=#8a8a8a,bg=#080808] #I #W #[fg=#080808,bg=#080808]\uE0B0"
setw -g window-status-current-format "#[fg=#080808,bg=#00afff]\uE0B0#[fg=#000000,bg=#00afff,bold] #I #W #[fg=#00afff,bg=#080808,none]\uE0B0"
setw -g window-status-activity-style "underscore"
setw -g window-status-bell-style "blink,bold"
setw -g window-status-separator ""

screen='#[fg=#000000,bg=#ffff00,bold] ❐ #S'
uptime='#[fg=#e4e4e4,bg=#ff00af] ↑ #(uptime | sed -E -e "s/.*up //" -e "s/, [0-9]* users.*/m/" -e "s/ days,/d/" -e "s/:/h /" -e "s/ hrs/h 00/" -e "s/  / 0/")'
hostname='#(hostname -s)'
username='#(echo $USER)'
date='#(date | cut -d" " -f2,3)'
time='#(date | cut -d" " -f4)'

set -g status-left "$screen #[fg=#ffff00,bg=#ff00af,none]\uE0B0$uptime #[fg=#ff00af,bg=#080808]\uE0B0"
set -g status-right "#[fg=#e4e4e4]#{?pane_synchronized,\uF023 ,}#{?client_prefix,\u2328 ,}#[fg=default]\uE0B3 $time \uE0B3 $date #[fg=#d70000,bg=#080808]\uE0B2#[fg=#e4e4e4,bg=#d70000,none] $username #[fg=#e4e4e4,bg=#d70000]\uE0B2#[fg=#000000,bg=#e4e4e4,bold] $hostname "

if -F '#{!=:#{status},2}' {
	set -Fg status-format[1] '#{status-format[0]}'
	set -g status-format[0] ''
	set -g status 2
}
